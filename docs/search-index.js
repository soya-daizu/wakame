crystal_doc_search_index_callback({"repository_name":"wakame","body":"# Wakame\n\nWakame is a Crystal binding for MeCab([Website](https://taku910.github.io/mecab)/[Wikipedia](https://en.wikipedia.org/wiki/MeCab)), a morphological analyzer written in C++ often used to analyze Japanese texts. Wakame aims to provide natural interfaces to MeCab in Crystal.\n\nThis project is currently work-in-progress. While Wakame's internal direct binding to C has 100% coverage of the original C interfaces, it's currently lacking with higher-level abstractions in Crystal.\n\n## Dependencies\n\n- [MeCab](https://taku910.github.io/mecab/#download)\n  - You may also need to install `libmecab-dev` if you are installing from the package manager.\n- One of the system dictionaries available on the [website](https://taku910.github.io/mecab/#download) or a third-party dictionary like [mecab-ipadic-NEologd](https://github.com/neologd/mecab-ipadic-neologd)\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     wakame:\n       github: soya-daizu/wakame\n   ```\n\n2. Run `shards install`\n\n## Usage\n\nAn example of usage through Wakame's internal direct binding to C is available under the `examples/` directory. More guides will be added after Wakame supports higher-level abstractions.\n\n## Contributing\n\n1. Fork it (<https://github.com/soya-daizu/wakame/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [soya_daizu](https://github.com/soya-daizu) - creator and maintainer\n","program":{"html_id":"wakame/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"wakame","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"wakame/Wakame","path":"Wakame.html","kind":"module","full_name":"Wakame","name":"Wakame","abstract":false,"locations":[{"filename":"src/wakame.cr","line_number":3,"url":null},{"filename":"src/wakame/dict_info.cr","line_number":4,"url":null},{"filename":"src/wakame/lib/struct.cr","line_number":1,"url":null},{"filename":"src/wakame/node.cr","line_number":4,"url":null},{"filename":"src/wakame/options.cr","line_number":3,"url":null},{"filename":"src/wakame/path.cr","line_number":4,"url":null},{"filename":"src/wakame/wakame.cr","line_number":3,"url":null},{"filename":"src/wakame/wrapping_struct.cr","line_number":1,"url":null}],"repository_name":"wakame","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\""}],"types":[{"html_id":"wakame/Wakame/DictionaryInfo","path":"Wakame/DictionaryInfo.html","kind":"struct","full_name":"Wakame::DictionaryInfo","name":"DictionaryInfo","abstract":false,"superclass":{"html_id":"wakame/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"wakame/Wakame/WrappingStruct","kind":"module","full_name":"Wakame::WrappingStruct","name":"WrappingStruct"},{"html_id":"wakame/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"wakame/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"wakame/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wakame/dict_info.cr","line_number":7,"url":null}],"repository_name":"wakame","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"wakame/Wakame/WrappingStruct","kind":"module","full_name":"Wakame::WrappingStruct","name":"WrappingStruct"}],"namespace":{"html_id":"wakame/Wakame","kind":"module","full_name":"Wakame","name":"Wakame"},"doc":"Wrapper for the `Wakame::Lib::DictionaryInfoT` structure\nholding informations of a dictionary.","summary":"<p>Wrapper for the <code><a href=\"../Wakame/Lib/DictionaryInfoT.html\">Wakame::Lib::DictionaryInfoT</a></code> structure holding informations of a dictionary.</p>","constructors":[{"html_id":"new(pointer:Pointer(Lib::DictionaryInfoT))-class-method","name":"new","abstract":false,"args":[{"name":"pointer","external_name":"pointer","restriction":"::Pointer(Lib::DictionaryInfoT)"}],"args_string":"(pointer : Pointer(Lib::DictionaryInfoT))","args_html":"(pointer : Pointer(<a href=\"../Wakame/Lib/DictionaryInfoT.html\">Lib::DictionaryInfoT</a>))","location":{"filename":"src/wakame/dict_info.cr","line_number":34,"url":null},"def":{"name":"new","args":[{"name":"pointer","external_name":"pointer","restriction":"::Pointer(Lib::DictionaryInfoT)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(pointer)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"charset:String-instance-method","name":"charset","doc":"Character set of the dictionary.","summary":"<p>Character set of the dictionary.</p>","abstract":false,"location":{"filename":"src/wakame/dict_info.cr","line_number":21,"url":null},"def":{"name":"charset","visibility":"Public","body":"@charset"}},{"html_id":"filename:String-instance-method","name":"filename","doc":"Filename of the dictionary.","summary":"<p>Filename of the dictionary.</p>","abstract":false,"location":{"filename":"src/wakame/dict_info.cr","line_number":19,"url":null},"def":{"name":"filename","visibility":"Public","body":"@filename"}},{"html_id":"lsize:UInt32-instance-method","name":"lsize","doc":"This method forwards the call to the underlying `Wakame::Lib::DictionaryInfoT` structure.\n\nSee `Wakame::Lib::DictionaryInfoT#lsize` for details.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/DictionaryInfoT.html\">Wakame::Lib::DictionaryInfoT</a></code> structure.</p>","abstract":false,"location":{"filename":"src/wakame/dict_info.cr","line_number":28,"url":null},"def":{"name":"lsize","return_type":"UInt32","visibility":"Public","body":"@pointer.value.lsize"}},{"html_id":"next:DictionaryInfo?-instance-method","name":"next","doc":"This method forwards the call to the underlying `Wakame::Lib::DictionaryInfoT` structure,\nresolves the pointer returned, and returns the wrapped variant of it.\n\nSee `Wakame::Lib::DictionaryInfoT#next` for details on the underlying value.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/DictionaryInfoT.html\">Wakame::Lib::DictionaryInfoT</a></code> structure, resolves the pointer returned, and returns the wrapped variant of it.</p>","abstract":false,"location":{"filename":"src/wakame/dict_info.cr","line_number":24,"url":null},"def":{"name":"next","return_type":"DictionaryInfo | ::Nil","visibility":"Public","body":"pointer = @pointer.value.next\nif pointer\n  DictionaryInfo.new(pointer)\nend\n"}},{"html_id":"pointer:Pointer(Wakame::Lib::DictionaryInfoT)-instance-method","name":"pointer","doc":"Pointer to the underlying structure.","summary":"<p>Pointer to the underlying structure.</p>","abstract":false,"location":{"filename":"src/wakame/dict_info.cr","line_number":17,"url":null},"def":{"name":"pointer","visibility":"Public","body":"@pointer"}},{"html_id":"rsize:UInt32-instance-method","name":"rsize","doc":"This method forwards the call to the underlying `Wakame::Lib::DictionaryInfoT` structure.\n\nSee `Wakame::Lib::DictionaryInfoT#rsize` for details.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/DictionaryInfoT.html\">Wakame::Lib::DictionaryInfoT</a></code> structure.</p>","abstract":false,"location":{"filename":"src/wakame/dict_info.cr","line_number":28,"url":null},"def":{"name":"rsize","return_type":"UInt32","visibility":"Public","body":"@pointer.value.rsize"}},{"html_id":"size:UInt32-instance-method","name":"size","doc":"This method forwards the call to the underlying `Wakame::Lib::DictionaryInfoT` structure.\n\nSee `Wakame::Lib::DictionaryInfoT#size` for details.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/DictionaryInfoT.html\">Wakame::Lib::DictionaryInfoT</a></code> structure.</p>","abstract":false,"location":{"filename":"src/wakame/dict_info.cr","line_number":28,"url":null},"def":{"name":"size","return_type":"UInt32","visibility":"Public","body":"@pointer.value.size"}},{"html_id":"system_dic?:Bool-instance-method","name":"system_dic?","doc":"Calls `DictionaryType#system_dic?` of the `#type`.","summary":"<p>Calls <code><a href=\"../Wakame/DictionaryInfo/DictionaryType.html#system_dic%3F-instance-method\">DictionaryType#system_dic?</a></code> of the <code><a href=\"../Wakame/DictionaryInfo.html#type%3AWakame%3A%3ADictionaryInfo%3A%3ADictionaryType-instance-method\">#type</a></code>.</p>","abstract":false,"location":{"filename":"src/wakame/dict_info.cr","line_number":32,"url":null},"def":{"name":"system_dic?","return_type":"Bool","visibility":"Public","body":"type.system_dic?"}},{"html_id":"type:Wakame::DictionaryInfo::DictionaryType-instance-method","name":"type","doc":"Dictionary type.","summary":"<p>Dictionary type.</p>","abstract":false,"location":{"filename":"src/wakame/dict_info.cr","line_number":23,"url":null},"def":{"name":"type","visibility":"Public","body":"@type"}},{"html_id":"unknown_dic?:Bool-instance-method","name":"unknown_dic?","doc":"Calls `DictionaryType#unknown_dic?` of the `#type`.","summary":"<p>Calls <code><a href=\"../Wakame/DictionaryInfo/DictionaryType.html#unknown_dic%3F-instance-method\">DictionaryType#unknown_dic?</a></code> of the <code><a href=\"../Wakame/DictionaryInfo.html#type%3AWakame%3A%3ADictionaryInfo%3A%3ADictionaryType-instance-method\">#type</a></code>.</p>","abstract":false,"location":{"filename":"src/wakame/dict_info.cr","line_number":32,"url":null},"def":{"name":"unknown_dic?","return_type":"Bool","visibility":"Public","body":"type.unknown_dic?"}},{"html_id":"user_dic?:Bool-instance-method","name":"user_dic?","doc":"Calls `DictionaryType#user_dic?` of the `#type`.","summary":"<p>Calls <code><a href=\"../Wakame/DictionaryInfo/DictionaryType.html#user_dic%3F-instance-method\">DictionaryType#user_dic?</a></code> of the <code><a href=\"../Wakame/DictionaryInfo.html#type%3AWakame%3A%3ADictionaryInfo%3A%3ADictionaryType-instance-method\">#type</a></code>.</p>","abstract":false,"location":{"filename":"src/wakame/dict_info.cr","line_number":32,"url":null},"def":{"name":"user_dic?","return_type":"Bool","visibility":"Public","body":"type.user_dic?"}},{"html_id":"version:UInt16-instance-method","name":"version","doc":"This method forwards the call to the underlying `Wakame::Lib::DictionaryInfoT` structure.\n\nSee `Wakame::Lib::DictionaryInfoT#version` for details.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/DictionaryInfoT.html\">Wakame::Lib::DictionaryInfoT</a></code> structure.</p>","abstract":false,"location":{"filename":"src/wakame/dict_info.cr","line_number":28,"url":null},"def":{"name":"version","return_type":"UInt16","visibility":"Public","body":"@pointer.value.version"}}],"types":[{"html_id":"wakame/Wakame/DictionaryInfo/DictionaryType","path":"Wakame/DictionaryInfo/DictionaryType.html","kind":"enum","full_name":"Wakame::DictionaryInfo::DictionaryType","name":"DictionaryType","abstract":false,"ancestors":[{"html_id":"wakame/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"wakame/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"wakame/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"wakame/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wakame/dict_info.cr","line_number":10,"url":null}],"repository_name":"wakame","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"SystemDic","name":"SystemDic","value":"0"},{"id":"UserDic","name":"UserDic","value":"1"},{"id":"UnknownDic","name":"UnknownDic","value":"2"}],"namespace":{"html_id":"wakame/Wakame/DictionaryInfo","kind":"struct","full_name":"Wakame::DictionaryInfo","name":"DictionaryInfo"},"instance_methods":[{"html_id":"system_dic?-instance-method","name":"system_dic?","abstract":false,"location":{"filename":"src/wakame/dict_info.cr","line_number":11,"url":null},"def":{"name":"system_dic?","visibility":"Public","body":"self == SystemDic"}},{"html_id":"unknown_dic?-instance-method","name":"unknown_dic?","abstract":false,"location":{"filename":"src/wakame/dict_info.cr","line_number":13,"url":null},"def":{"name":"unknown_dic?","visibility":"Public","body":"self == UnknownDic"}},{"html_id":"user_dic?-instance-method","name":"user_dic?","abstract":false,"location":{"filename":"src/wakame/dict_info.cr","line_number":12,"url":null},"def":{"name":"user_dic?","visibility":"Public","body":"self == UserDic"}}]}]},{"html_id":"wakame/Wakame/Lib","path":"Wakame/Lib.html","kind":"module","full_name":"Wakame::Lib","name":"Lib","abstract":false,"locations":[{"filename":"src/wakame/lib/struct.cr","line_number":2,"url":null}],"repository_name":"wakame","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wakame/Wakame","kind":"module","full_name":"Wakame","name":"Wakame"},"types":[{"html_id":"wakame/Wakame/Lib/DictionaryInfoT","path":"Wakame/Lib/DictionaryInfoT.html","kind":"struct","full_name":"Wakame::Lib::DictionaryInfoT","name":"DictionaryInfoT","abstract":false,"superclass":{"html_id":"wakame/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"wakame/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"wakame/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"wakame/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wakame/lib/struct.cr","line_number":4,"url":null}],"repository_name":"wakame","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wakame/Wakame/Lib","kind":"module","full_name":"Wakame::Lib","name":"Lib"},"instance_methods":[{"html_id":"charset:Pointer(LibC::Char)-instance-method","name":"charset","doc":"Character set of the dictionary.","summary":"<p>Character set of the dictionary.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":8,"url":null},"def":{"name":"charset","return_type":"::Pointer(LibC::Char)","visibility":"Public","body":"@charset"}},{"html_id":"filename:Pointer(LibC::Char)-instance-method","name":"filename","doc":"Filename of the dictionary.","summary":"<p>Filename of the dictionary.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":6,"url":null},"def":{"name":"filename","return_type":"::Pointer(LibC::Char)","visibility":"Public","body":"@filename"}},{"html_id":"lsize:UInt32-instance-method","name":"lsize","doc":"Left attributes size","summary":"<p>Left attributes size</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":16,"url":null},"def":{"name":"lsize","return_type":"UInt32","visibility":"Public","body":"@lsize"}},{"html_id":"next:Pointer(Wakame::Lib::DictionaryInfoT)-instance-method","name":"next","doc":"Pointer to the next dictionary info.","summary":"<p>Pointer to the next dictionary info.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":22,"url":null},"def":{"name":"next","return_type":"::Pointer(Wakame::Lib::DictionaryInfoT)","visibility":"Public","body":"@next"}},{"html_id":"rsize:UInt32-instance-method","name":"rsize","doc":"Right attributes size","summary":"<p>Right attributes size</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":18,"url":null},"def":{"name":"rsize","return_type":"UInt32","visibility":"Public","body":"@rsize"}},{"html_id":"size:UInt32-instance-method","name":"size","doc":"Number of words registered in the dictionary.","summary":"<p>Number of words registered in the dictionary.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":10,"url":null},"def":{"name":"size","return_type":"UInt32","visibility":"Public","body":"@size"}},{"html_id":"type:Int32-instance-method","name":"type","doc":"Dictionary type\n\nThis can be either MECAB_USR_DIC, MECAB_SYS_DIC, or MECAB_UNK_DIC.","summary":"<p>Dictionary type</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":14,"url":null},"def":{"name":"type","return_type":"Int32","visibility":"Public","body":"@type"}},{"html_id":"version:UInt16-instance-method","name":"version","doc":"Version of this dictionary.","summary":"<p>Version of this dictionary.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":20,"url":null},"def":{"name":"version","return_type":"UInt16","visibility":"Public","body":"@version"}}]},{"html_id":"wakame/Wakame/Lib/MeCabNodeT","path":"Wakame/Lib/MeCabNodeT.html","kind":"struct","full_name":"Wakame::Lib::MeCabNodeT","name":"MeCabNodeT","abstract":false,"superclass":{"html_id":"wakame/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"wakame/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"wakame/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"wakame/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wakame/lib/struct.cr","line_number":55,"url":null}],"repository_name":"wakame","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wakame/Wakame/Lib","kind":"module","full_name":"Wakame::Lib","name":"Lib"},"doc":"Underlying structure for `Wakame::MeCabNode`. Represents `struct mecab_node_t` in C.\n\nAll of these attributes can be accessed directly from `Wakame::MeCabNode` without\nretrieving this struct from its pointer. DO NOT use this struct in your actual code!","summary":"<p>Underlying structure for <code><a href=\"../../Wakame/MeCabNode.html\">Wakame::MeCabNode</a></code>.</p>","instance_methods":[{"html_id":"alpha:Float32-instance-method","name":"alpha","doc":"Forward accumulative log summation.\n\nThis value is only available when MECAB_MARGINAL_PROB is passed.","summary":"<p>Forward accumulative log summation.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":104,"url":null},"def":{"name":"alpha","return_type":"Float32","visibility":"Public","body":"@alpha"}},{"html_id":"beta:Float32-instance-method","name":"beta","doc":"Backward accumulative log summation.\n\nThis value is only available when MECAB_MARGINAL_PROB is passed.","summary":"<p>Backward accumulative log summation.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":108,"url":null},"def":{"name":"beta","return_type":"Float32","visibility":"Public","body":"@beta"}},{"html_id":"bnext:Pointer(Wakame::Lib::MeCabNodeT)-instance-method","name":"bnext","doc":"Pointer to the node which starts at the same position.","summary":"<p>Pointer to the node which starts at the same position.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":63,"url":null},"def":{"name":"bnext","return_type":"::Pointer(Wakame::Lib::MeCabNodeT)","visibility":"Public","body":"@bnext"}},{"html_id":"char_type:UInt8-instance-method","name":"char_type","doc":"Character type","summary":"<p>Character type</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":94,"url":null},"def":{"name":"char_type","return_type":"UInt8","visibility":"Public","body":"@char_type"}},{"html_id":"cost:LibC::Long-instance-method","name":"cost","doc":"Best accumulative cost from bos node to this node.","summary":"<p>Best accumulative cost from bos node to this node.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":116,"url":null},"def":{"name":"cost","return_type":"LibC::Long","visibility":"Public","body":"@cost"}},{"html_id":"enext:Pointer(Wakame::Lib::MeCabNodeT)-instance-method","name":"enext","doc":"Pointer to the node which ends at the same position.","summary":"<p>Pointer to the node which ends at the same position.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":61,"url":null},"def":{"name":"enext","return_type":"::Pointer(Wakame::Lib::MeCabNodeT)","visibility":"Public","body":"@enext"}},{"html_id":"feature:Pointer(LibC::Char)-instance-method","name":"feature","doc":"Feature string","summary":"<p>Feature string</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":78,"url":null},"def":{"name":"feature","return_type":"::Pointer(LibC::Char)","visibility":"Public","body":"@feature"}},{"html_id":"id:UInt32-instance-method","name":"id","doc":"Unique node id","summary":"<p>Unique node id</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":80,"url":null},"def":{"name":"id","return_type":"UInt32","visibility":"Public","body":"@id"}},{"html_id":"isbest:UInt8-instance-method","name":"isbest","doc":"Set 1 if this node is the best node.","summary":"<p>Set 1 if this node is the best node.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":100,"url":null},"def":{"name":"isbest","return_type":"UInt8","visibility":"Public","body":"@isbest"}},{"html_id":"lc_attr:UInt16-instance-method","name":"lc_attr","doc":"Left attribute id","summary":"<p>Left attribute id</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":88,"url":null},"def":{"name":"lc_attr","return_type":"UInt16","visibility":"Public","body":"@lc_attr"}},{"html_id":"length:UInt16-instance-method","name":"length","doc":"Length of the surface form.","summary":"<p>Length of the surface form.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":82,"url":null},"def":{"name":"length","return_type":"UInt16","visibility":"Public","body":"@length"}},{"html_id":"lpath:Pointer(Wakame::Lib::MeCabPathT)-instance-method","name":"lpath","doc":"Pointer to the right path.\n\nThis value is NULL in MECAB_ONE_BEST mode.","summary":"<p>Pointer to the right path.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":71,"url":null},"def":{"name":"lpath","return_type":"::Pointer(Wakame::Lib::MeCabPathT)","visibility":"Public","body":"@lpath"}},{"html_id":"next:Pointer(Wakame::Lib::MeCabNodeT)-instance-method","name":"next","doc":"Pointer to the next node.","summary":"<p>Pointer to the next node.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":59,"url":null},"def":{"name":"next","return_type":"::Pointer(Wakame::Lib::MeCabNodeT)","visibility":"Public","body":"@next"}},{"html_id":"posid:UInt16-instance-method","name":"posid","doc":"Unique part of speech id.\n\nThis value is defined in \"pos.def\" file.","summary":"<p>Unique part of speech id.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":92,"url":null},"def":{"name":"posid","return_type":"UInt16","visibility":"Public","body":"@posid"}},{"html_id":"prev:Pointer(Wakame::Lib::MeCabNodeT)-instance-method","name":"prev","doc":"Pointer to the previous node.","summary":"<p>Pointer to the previous node.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":57,"url":null},"def":{"name":"prev","return_type":"::Pointer(Wakame::Lib::MeCabNodeT)","visibility":"Public","body":"@prev"}},{"html_id":"prob:Float32-instance-method","name":"prob","doc":"Marginal probability\n\nThis value is only available when MECAB_MARGINAL_PROB is passed.","summary":"<p>Marginal probability</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":112,"url":null},"def":{"name":"prob","return_type":"Float32","visibility":"Public","body":"@prob"}},{"html_id":"rc_attr:UInt16-instance-method","name":"rc_attr","doc":"Right attribute id","summary":"<p>Right attribute id</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":86,"url":null},"def":{"name":"rc_attr","return_type":"UInt16","visibility":"Public","body":"@rc_attr"}},{"html_id":"rlength:UInt16-instance-method","name":"rlength","doc":"Length of the surface form including the white space before the morph.","summary":"<p>Length of the surface form including the white space before the morph.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":84,"url":null},"def":{"name":"rlength","return_type":"UInt16","visibility":"Public","body":"@rlength"}},{"html_id":"rpath:Pointer(Wakame::Lib::MeCabPathT)-instance-method","name":"rpath","doc":"Pointer to the right path.\n\nThis value is NULL in MECAB_ONE_BEST mode.","summary":"<p>Pointer to the right path.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":67,"url":null},"def":{"name":"rpath","return_type":"::Pointer(Wakame::Lib::MeCabPathT)","visibility":"Public","body":"@rpath"}},{"html_id":"stat:UInt8-instance-method","name":"stat","doc":"Status of this model.\n\nThis can be either MECAB_NOR_NODE, MECAB_UNK_NODE, MECAB_BOS_NODE, MECAB_EOS_NODE, or MECAB_EON_NODE.","summary":"<p>Status of this model.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":98,"url":null},"def":{"name":"stat","return_type":"UInt8","visibility":"Public","body":"@stat"}},{"html_id":"surface:Pointer(LibC::Char)-instance-method","name":"surface","doc":"Surface string\n\nThis value is not 0 terminated.\nYou can get the length from the length/rlength members.","summary":"<p>Surface string</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":76,"url":null},"def":{"name":"surface","return_type":"::Pointer(LibC::Char)","visibility":"Public","body":"@surface"}},{"html_id":"wcost:Int16-instance-method","name":"wcost","doc":"Word cost","summary":"<p>Word cost</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":114,"url":null},"def":{"name":"wcost","return_type":"Int16","visibility":"Public","body":"@wcost"}}]},{"html_id":"wakame/Wakame/Lib/MeCabPathT","path":"Wakame/Lib/MeCabPathT.html","kind":"struct","full_name":"Wakame::Lib::MeCabPathT","name":"MeCabPathT","abstract":false,"superclass":{"html_id":"wakame/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"wakame/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"wakame/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"wakame/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wakame/lib/struct.cr","line_number":31,"url":null}],"repository_name":"wakame","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wakame/Wakame/Lib","kind":"module","full_name":"Wakame::Lib","name":"Lib"},"instance_methods":[{"html_id":"cost:Int32-instance-method","name":"cost","doc":"Local cost","summary":"<p>Local cost</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":41,"url":null},"def":{"name":"cost","return_type":"Int32","visibility":"Public","body":"@cost"}},{"html_id":"lnext:Pointer(Wakame::Lib::MeCabPathT)-instance-method","name":"lnext","doc":"Pointer to the next left path.","summary":"<p>Pointer to the next left path.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":39,"url":null},"def":{"name":"lnext","return_type":"::Pointer(Wakame::Lib::MeCabPathT)","visibility":"Public","body":"@lnext"}},{"html_id":"lnode:Pointer(Wakame::Lib::MeCabNodeT)-instance-method","name":"lnode","doc":"Pointer to the left node.","summary":"<p>Pointer to the left node.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":37,"url":null},"def":{"name":"lnode","return_type":"::Pointer(Wakame::Lib::MeCabNodeT)","visibility":"Public","body":"@lnode"}},{"html_id":"prob:Float32-instance-method","name":"prob","doc":"Marginal probability","summary":"<p>Marginal probability</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":43,"url":null},"def":{"name":"prob","return_type":"Float32","visibility":"Public","body":"@prob"}},{"html_id":"rnext:Pointer(Wakame::Lib::MeCabPathT)-instance-method","name":"rnext","doc":"Pointer to the next right path.","summary":"<p>Pointer to the next right path.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":35,"url":null},"def":{"name":"rnext","return_type":"::Pointer(Wakame::Lib::MeCabPathT)","visibility":"Public","body":"@rnext"}},{"html_id":"rnode:Pointer(Wakame::Lib::MeCabNodeT)-instance-method","name":"rnode","doc":"Pointer to the right node.","summary":"<p>Pointer to the right node.</p>","abstract":false,"location":{"filename":"src/wakame/lib/struct.cr","line_number":33,"url":null},"def":{"name":"rnode","return_type":"::Pointer(Wakame::Lib::MeCabNodeT)","visibility":"Public","body":"@rnode"}}]}]},{"html_id":"wakame/Wakame/MeCab","path":"Wakame/MeCab.html","kind":"class","full_name":"Wakame::MeCab","name":"MeCab","abstract":false,"superclass":{"html_id":"wakame/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wakame/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wakame/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wakame/wakame.cr","line_number":52,"url":null}],"repository_name":"wakame","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wakame/Wakame","kind":"module","full_name":"Wakame","name":"Wakame"},"doc":"`MeCab` is the primary class to interact with the MeCab library.\n\nIt can be initialized by passing either a complete `Wakame::Options` object,\nor a series of arguments to be passed to the underlying `Wakame::Options` object,\nor a string of option arguments in command line format.\n\n```\nrequire \"wakame\"\n\nmecab = Wakame::MeCab.new\nputs mecab.parse(\"吾輩は猫である。名前はまだ無い。\")\n# => 吾輩    名詞,代名詞,一般,*,*,*,吾輩,ワガハイ,ワガハイ\n#    は      助詞,係助詞,*,*,*,*,は,ハ,ワ\n#    猫      名詞,一般,*,*,*,*,猫,ネコ,ネコ\n#    で      助動詞,*,*,*,特殊・ダ,連用形,だ,デ,デ\n#    ある    助動詞,*,*,*,五段・ラ行アル,基本形,ある,アル,アル\n#    。      記号,句点,*,*,*,*,。,。,。\n#    名前    名詞,一般,*,*,*,*,名前,ナマエ,ナマエ\n#    は      助詞,係助詞,*,*,*,*,は,ハ,ワ\n#    まだ    副詞,助詞類接続,*,*,*,*,まだ,マダ,マダ\n#    無い    形容詞,自立,*,*,形容詞・アウオ段,基本形,無い,ナイ,ナイ\n#    。      記号,句点,*,*,*,*,。,。,。\n#    EOS\n\nmecab.parse(\"吾輩は猫である。名前はまだ無い。\") do |node|\n  puts \"#{node.surface},#{node.feature}\" if !node.bos_node? && !node.eos_node?\nend\n# => 吾輩,名詞,代名詞,一般,*,*,*,吾輩,ワガハイ,ワガハイ\n#    は,助詞,係助詞,*,*,*,*,は,ハ,ワ\n#    猫,名詞,一般,*,*,*,*,猫,ネコ,ネコ\n#    で,助動詞,*,*,*,特殊・ダ,連用形,だ,デ,デ\n#    ある,助動詞,*,*,*,五段・ラ行アル,基本形,ある,アル,アル\n#    。,記号,句点,*,*,*,*,。,。,。\n#    名前,名詞,一般,*,*,*,*,名前,ナマエ,ナマエ\n#    は,助詞,係助詞,*,*,*,*,は,ハ,ワ\n#    まだ,副詞,助詞類接続,*,*,*,*,まだ,マダ,マダ\n#    無い,形容詞,自立,*,*,形容詞・アウオ段,基本形,無い,ナイ,ナイ\n#    。,記号,句点,*,*,*,*,。,。,。\n\n# These two are equivalent\nmecab = Wakame::MeCab.new(node_format: \"%pS%f[7]\\\\s\", eos_format: \"\\\\0\")\nputs mecab.parse(\"吾輩は猫である。名前はまだ無い。\")\n# => ワガハイ ハ ネコ デ アル 。 ナマエ ハ マダ ナイ 。\n\nmecab = Wakame::MeCab.new(\"-F %pS%f[7]\\\\s -E \\\\0\")\nputs mecab.parse(\"吾輩は猫である。名前はまだ無い。\")\n# => ワガハイ ハ ネコ デ アル 。 ナマエ ハ マダ ナイ 。\n```","summary":"<p><code><a href=\"../Wakame/MeCab.html\">MeCab</a></code> is the primary class to interact with the MeCab library.</p>","constructors":[{"html_id":"new(option_str:String)-class-method","name":"new","doc":"Creates a new MeCab instance from the given string of option arguments\nin the style of MeCab's command line interface.","summary":"<p>Creates a new MeCab instance from the given string of option arguments in the style of MeCab's command line interface.</p>","abstract":false,"args":[{"name":"option_str","external_name":"option_str","restriction":"String"}],"args_string":"(option_str : String)","args_html":"(option_str : String)","location":{"filename":"src/wakame/wakame.cr","line_number":73,"url":null},"def":{"name":"new","args":[{"name":"option_str","external_name":"option_str","restriction":"String"}],"visibility":"Public","body":"options = Options.new(option_str)\nself.new(options)\n"}},{"html_id":"new(options:Options)-class-method","name":"new","doc":"Creates a new MeCab instance with the given `Wakame::Options` object.","summary":"<p>Creates a new MeCab instance with the given <code><a href=\"../Wakame/Options.html\">Wakame::Options</a></code> object.</p>","abstract":false,"args":[{"name":"options","external_name":"options","restriction":"Options"}],"args_string":"(options : Options)","args_html":"(options : <a href=\"../Wakame/Options.html\">Options</a>)","location":{"filename":"src/wakame/wakame.cr","line_number":79,"url":null},"def":{"name":"new","args":[{"name":"options","external_name":"options","restriction":"Options"}],"visibility":"Public","body":"_ = allocate\n_.initialize(options)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(**option_args)-class-method","name":"new","doc":"Creates a new MeCab instance from the given option arguments.\nThese arguments are first forwarded to instantiate the underlying\n`Wakame::Options` object that is needed to instantiate itself.\n\nSee `Wakame::Options` for the all available options.","summary":"<p>Creates a new MeCab instance from the given option arguments.</p>","abstract":false,"location":{"filename":"src/wakame/wakame.cr","line_number":66,"url":null},"def":{"name":"new","double_splat":{"name":"option_args","external_name":"option_args","restriction":""},"visibility":"Public","body":"options = Options.new(**option_args)\nself.new(options)\n"}}],"instance_methods":[{"html_id":"dicts:Array(Wakame::DictionaryInfo)-instance-method","name":"dicts","abstract":false,"location":{"filename":"src/wakame/wakame.cr","line_number":59,"url":null},"def":{"name":"dicts","visibility":"Public","body":"@dicts"}},{"html_id":"lattice:Pointer(LibMeCab::LatticeT)-instance-method","name":"lattice","abstract":false,"location":{"filename":"src/wakame/wakame.cr","line_number":59,"url":null},"def":{"name":"lattice","visibility":"Public","body":"@lattice"}},{"html_id":"libpath-instance-method","name":"libpath","abstract":false,"location":{"filename":"src/wakame/wakame.cr","line_number":59,"url":null},"def":{"name":"libpath","visibility":"Public","body":"@libpath"}},{"html_id":"model:Pointer(LibMeCab::ModelT)-instance-method","name":"model","abstract":false,"location":{"filename":"src/wakame/wakame.cr","line_number":59,"url":null},"def":{"name":"model","visibility":"Public","body":"@model"}},{"html_id":"options:Wakame::Options-instance-method","name":"options","abstract":false,"location":{"filename":"src/wakame/wakame.cr","line_number":59,"url":null},"def":{"name":"options","visibility":"Public","body":"@options"}},{"html_id":"parse(text:String,boundary_constraints:Regex|String)-instance-method","name":"parse","doc":"Parses the given text with boundary constraints,\nreturning the MeCab output as a single String.\n\nBoundary constraints provide hints to MeCab on where\nthe morpheme boundaries are located in the given text.\n```\nmecab = Wakame::MeCab.new\n# Without using boundary constraints\nputs mecab.parse(\"外国人参政権\")\n# => 外国    名詞,一般,*,*,*,*,外国,ガイコク,ガイコク\n#    人参    名詞,一般,*,*,*,*,人参,ニンジン,ニンジン\n#    政権    名詞,一般,*,*,*,*,政権,セイケン,セイケン\n#    EOS\n\n# Giving MeCab hints with boundary constraints\nputs mecab.parse(\"外国人参政権\", /外国|人/)\n# => 外国    名詞,一般,*,*,*,*,外国,ガイコク,ガイコク\n#    人      名詞,接尾,一般,*,*,*,人,ジン,ジン\n#    参政    名詞,サ変接続,*,*,*,*,参政,サンセイ,サンセイ\n#    権      名詞,接尾,一般,*,*,*,権,ケン,ケン\nEOS\n```","summary":"<p>Parses the given text with boundary constraints, returning the MeCab output as a single String.</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"boundary_constraints","external_name":"boundary_constraints","restriction":"Regex | String"}],"args_string":"(text : String, boundary_constraints : Regex | String)","args_html":"(text : String, boundary_constraints : Regex | String)","location":{"filename":"src/wakame/wakame.cr","line_number":165,"url":null},"def":{"name":"parse","args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"boundary_constraints","external_name":"boundary_constraints","restriction":"Regex | String"}],"visibility":"Public","body":"begin\n  set_boundary_constraints(text, boundary_constraints)\n  parse_lattice_tostr\nrescue ex\n  handle_lattice_error\nend"}},{"html_id":"parse(text:String,feature_constraints:Hash(String,String))-instance-method","name":"parse","doc":"Parses the given text with feature constraints,\nreturning the MeCab output as a single String.\n\nFeature constraints provide instructions to MeCab to use\na specific feature for any morphemes that match the given key.\nSet the morpheme String as a key and the feature String as the value.\nWildcard \"*\" can be used as the feature to let MeCab decide which feature to use.\n\n```\nmecab = Wakame::MeCab.new\n# Without using feature constraints\nputs mecab.parse(\"邪神ちゃんドロップキーック！\")\n# => 邪神    名詞,一般,*,*,*,*,邪神,ジャシン,ジャシン\n#    ちゃん  名詞,接尾,人名,*,*,*,ちゃん,チャン,チャン\n#    ドロップキーック        名詞,一般,*,*,*,*,*\n#    ！      記号,一般,*,*,*,*,！,！,！\nEOS\n# Giving MeCab hints with feature constraints\nputs mecab.parse(\"邪神ちゃんドロップキーック！\", {\"邪神ちゃん\" => \"*\", \"キーック\" => \"*\"})\n# => 邪神ちゃん      名詞,一般,*,*,*,*,*\n#    ドロップ        名詞,一般,*,*,*,*,ドロップ,ドロップ,ドロップ\n#    キーック        名詞,一般,*,*,*,*,*\n#    ！      記号,一般,*,*,*,*,！,！,！\nEOS\n```","summary":"<p>Parses the given text with feature constraints, returning the MeCab output as a single String.</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"feature_constraints","external_name":"feature_constraints","restriction":"Hash(String, String)"}],"args_string":"(text : String, feature_constraints : Hash(String, String))","args_html":"(text : String, feature_constraints : Hash(String, String))","location":{"filename":"src/wakame/wakame.cr","line_number":208,"url":null},"def":{"name":"parse","args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"feature_constraints","external_name":"feature_constraints","restriction":"Hash(String, String)"}],"visibility":"Public","body":"begin\n  set_feature_constraints(text, feature_constraints)\n  parse_lattice_tostr\nrescue ex\n  handle_lattice_error\nend"}},{"html_id":"parse(text:String)-instance-method","name":"parse","doc":"Parses the given text, returning the MeCab output as a single String.","summary":"<p>Parses the given text, returning the MeCab output as a single String.</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"}],"args_string":"(text : String)","args_html":"(text : String)","location":{"filename":"src/wakame/wakame.cr","line_number":128,"url":null},"def":{"name":"parse","args":[{"name":"text","external_name":"text","restriction":"String"}],"visibility":"Public","body":"begin\n  LibMeCab.lattice_set_sentence(@lattice, text)\n  parse_lattice_tostr\nrescue ex\n  handle_lattice_error\nend"}},{"html_id":"parse(text:String,boundary_constraints:Regex|String,&block:MeCabNode->)-instance-method","name":"parse","doc":"Parses the given text with boundary constraints,\nyielding each node to the given block.\n\nSee `#parse(text : String, boundary_constraints : Regex | String)` for details.","summary":"<p>Parses the given text with boundary constraints, yielding each node to the given block.</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"boundary_constraints","external_name":"boundary_constraints","restriction":"Regex | String"}],"args_string":"(text : String, boundary_constraints : Regex | String, &block : MeCabNode -> )","args_html":"(text : String, boundary_constraints : Regex | String, &block : <a href=\"../Wakame/MeCabNode.html\">MeCabNode</a> -> )","location":{"filename":"src/wakame/wakame.cr","line_number":176,"url":null},"def":{"name":"parse","args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"boundary_constraints","external_name":"boundary_constraints","restriction":"Regex | String"}],"yields":1,"block_arg":{"name":"block","external_name":"block","restriction":"(MeCabNode ->)"},"visibility":"Public","body":"begin\n  set_boundary_constraints(text, boundary_constraints)\n  parse_lattice_tonodes(&block)\nrescue ex\n  handle_lattice_error\nend"}},{"html_id":"parse(text:String,feature_constraints:Hash(String,String),&block:MeCabNode->)-instance-method","name":"parse","doc":"Parses the given text with feature constraints,\nyielding each node to the given block.\n\nSee `#parse(text : String, feature_constraints : Hash(String, String))` for details.","summary":"<p>Parses the given text with feature constraints, yielding each node to the given block.</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"feature_constraints","external_name":"feature_constraints","restriction":"Hash(String, String)"}],"args_string":"(text : String, feature_constraints : Hash(String, String), &block : MeCabNode -> )","args_html":"(text : String, feature_constraints : Hash(String, String), &block : <a href=\"../Wakame/MeCabNode.html\">MeCabNode</a> -> )","location":{"filename":"src/wakame/wakame.cr","line_number":219,"url":null},"def":{"name":"parse","args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"feature_constraints","external_name":"feature_constraints","restriction":"Hash(String, String)"}],"yields":1,"block_arg":{"name":"block","external_name":"block","restriction":"(MeCabNode ->)"},"visibility":"Public","body":"begin\n  set_feature_constraints(text, feature_constraints)\n  parse_lattice_tonodes(&block)\nrescue ex\n  handle_lattice_error\nend"}},{"html_id":"parse(text:String,&block:MeCabNode->)-instance-method","name":"parse","doc":"Parses the given text, yielding each node to the given block.","summary":"<p>Parses the given text, yielding each node to the given block.</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"}],"args_string":"(text : String, &block : MeCabNode -> )","args_html":"(text : String, &block : <a href=\"../Wakame/MeCabNode.html\">MeCabNode</a> -> )","location":{"filename":"src/wakame/wakame.cr","line_number":136,"url":null},"def":{"name":"parse","args":[{"name":"text","external_name":"text","restriction":"String"}],"yields":1,"block_arg":{"name":"block","external_name":"block","restriction":"(MeCabNode ->)"},"visibility":"Public","body":"begin\n  LibMeCab.lattice_set_sentence(@lattice, text)\n  parse_lattice_tonodes(&block)\nrescue ex\n  handle_lattice_error\nend"}},{"html_id":"tagger:Pointer(LibMeCab::T)-instance-method","name":"tagger","abstract":false,"location":{"filename":"src/wakame/wakame.cr","line_number":59,"url":null},"def":{"name":"tagger","visibility":"Public","body":"@tagger"}},{"html_id":"version:Pointer(UInt8)-instance-method","name":"version","abstract":false,"location":{"filename":"src/wakame/wakame.cr","line_number":59,"url":null},"def":{"name":"version","visibility":"Public","body":"@version"}}]},{"html_id":"wakame/Wakame/MeCabNode","path":"Wakame/MeCabNode.html","kind":"struct","full_name":"Wakame::MeCabNode","name":"MeCabNode","abstract":false,"superclass":{"html_id":"wakame/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"wakame/Wakame/WrappingStruct","kind":"module","full_name":"Wakame::WrappingStruct","name":"WrappingStruct"},{"html_id":"wakame/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"wakame/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"wakame/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wakame/node.cr","line_number":7,"url":null}],"repository_name":"wakame","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"wakame/Wakame/WrappingStruct","kind":"module","full_name":"Wakame::WrappingStruct","name":"WrappingStruct"}],"namespace":{"html_id":"wakame/Wakame","kind":"module","full_name":"Wakame","name":"Wakame"},"doc":"Wrapper for the `Wakame::Lib::MeCabNodeT` structure\nholding attributes of the parsed node.","summary":"<p>Wrapper for the <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure holding attributes of the parsed node.</p>","constructors":[{"html_id":"new(pointer:Pointer(Lib::MeCabNodeT),tagger:Pointer(LibMeCab::T)?=nil)-class-method","name":"new","abstract":false,"args":[{"name":"pointer","external_name":"pointer","restriction":"::Pointer(Lib::MeCabNodeT)"},{"name":"tagger","default_value":"nil","external_name":"tagger","restriction":"::Pointer(LibMeCab::T) | ::Nil"}],"args_string":"(pointer : Pointer(Lib::MeCabNodeT), tagger : Pointer(LibMeCab::T)? = nil)","args_html":"(pointer : Pointer(<a href=\"../Wakame/Lib/MeCabNodeT.html\">Lib::MeCabNodeT</a>), tagger : Pointer(LibMeCab::T)? = <span class=\"n\">nil</span>)","location":{"filename":"src/wakame/node.cr","line_number":50,"url":null},"def":{"name":"new","args":[{"name":"pointer","external_name":"pointer","restriction":"::Pointer(Lib::MeCabNodeT)"},{"name":"tagger","default_value":"nil","external_name":"tagger","restriction":"::Pointer(LibMeCab::T) | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(pointer, tagger)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"alpha:Float32-instance-method","name":"alpha","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabNodeT` structure.\n\nSee `Wakame::Lib::MeCabNodeT#alpha` for details.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":38,"url":null},"def":{"name":"alpha","return_type":"Float32","visibility":"Public","body":"@pointer.value.alpha"}},{"html_id":"beta:Float32-instance-method","name":"beta","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabNodeT` structure.\n\nSee `Wakame::Lib::MeCabNodeT#beta` for details.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":38,"url":null},"def":{"name":"beta","return_type":"Float32","visibility":"Public","body":"@pointer.value.beta"}},{"html_id":"bnext:MeCabNode?-instance-method","name":"bnext","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabNodeT` structure,\nresolves the pointer returned, and returns the wrapped variant of it.\n\nSee `Wakame::Lib::MeCabNodeT#bnext` for details on the underlying value.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure, resolves the pointer returned, and returns the wrapped variant of it.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":30,"url":null},"def":{"name":"bnext","return_type":"MeCabNode | ::Nil","visibility":"Public","body":"pointer = @pointer.value.bnext\nif pointer\n  MeCabNode.new(pointer, @tagger)\nend\n"}},{"html_id":"bos_node?:Bool-instance-method","name":"bos_node?","doc":"Calls `NodeStatus#bos_node?` of the `#stat`.","summary":"<p>Calls <code><a href=\"../Wakame/MeCabNode/NodeStatus.html#bos_node%3F-instance-method\">NodeStatus#bos_node?</a></code> of the <code><a href=\"../Wakame/MeCabNode.html#stat%3AWakame%3A%3AMeCabNode%3A%3ANodeStatus-instance-method\">#stat</a></code>.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":43,"url":null},"def":{"name":"bos_node?","return_type":"Bool","visibility":"Public","body":"stat.bos_node?"}},{"html_id":"char_type:UInt8-instance-method","name":"char_type","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabNodeT` structure.\n\nSee `Wakame::Lib::MeCabNodeT#char_type` for details.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":38,"url":null},"def":{"name":"char_type","return_type":"UInt8","visibility":"Public","body":"@pointer.value.char_type"}},{"html_id":"cost:LibC::Long-instance-method","name":"cost","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabNodeT` structure.\n\nSee `Wakame::Lib::MeCabNodeT#cost` for details.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":38,"url":null},"def":{"name":"cost","return_type":"LibC::Long","visibility":"Public","body":"@pointer.value.cost"}},{"html_id":"enext:MeCabNode?-instance-method","name":"enext","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabNodeT` structure,\nresolves the pointer returned, and returns the wrapped variant of it.\n\nSee `Wakame::Lib::MeCabNodeT#enext` for details on the underlying value.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure, resolves the pointer returned, and returns the wrapped variant of it.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":30,"url":null},"def":{"name":"enext","return_type":"MeCabNode | ::Nil","visibility":"Public","body":"pointer = @pointer.value.enext\nif pointer\n  MeCabNode.new(pointer, @tagger)\nend\n"}},{"html_id":"eon_node?:Bool-instance-method","name":"eon_node?","doc":"Calls `NodeStatus#eon_node?` of the `#stat`.","summary":"<p>Calls <code><a href=\"../Wakame/MeCabNode/NodeStatus.html#eon_node%3F-instance-method\">NodeStatus#eon_node?</a></code> of the <code><a href=\"../Wakame/MeCabNode.html#stat%3AWakame%3A%3AMeCabNode%3A%3ANodeStatus-instance-method\">#stat</a></code>.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":43,"url":null},"def":{"name":"eon_node?","return_type":"Bool","visibility":"Public","body":"stat.eon_node?"}},{"html_id":"eos_node?:Bool-instance-method","name":"eos_node?","doc":"Calls `NodeStatus#eos_node?` of the `#stat`.","summary":"<p>Calls <code><a href=\"../Wakame/MeCabNode/NodeStatus.html#eos_node%3F-instance-method\">NodeStatus#eos_node?</a></code> of the <code><a href=\"../Wakame/MeCabNode.html#stat%3AWakame%3A%3AMeCabNode%3A%3ANodeStatus-instance-method\">#stat</a></code>.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":43,"url":null},"def":{"name":"eos_node?","return_type":"Bool","visibility":"Public","body":"stat.eos_node?"}},{"html_id":"feature:String-instance-method","name":"feature","doc":"Feature string","summary":"<p>Feature string</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":23,"url":null},"def":{"name":"feature","visibility":"Public","body":"@feature"}},{"html_id":"formatted:String-instance-method","name":"formatted","doc":"Formatted variant of this node.\nThe format can be specified with the options `output_format_type` or\n`node_format` when instantiating the `Wakame::MeCab` class.","summary":"<p>Formatted variant of this node.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":29,"url":null},"def":{"name":"formatted","visibility":"Public","body":"@formatted"}},{"html_id":"id:UInt32-instance-method","name":"id","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabNodeT` structure.\n\nSee `Wakame::Lib::MeCabNodeT#id` for details.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":38,"url":null},"def":{"name":"id","return_type":"UInt32","visibility":"Public","body":"@pointer.value.id"}},{"html_id":"is_best?:Bool-instance-method","name":"is_best?","doc":"Returns true if this node is the best node.","summary":"<p>Returns true if this node is the best node.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":46,"url":null},"def":{"name":"is_best?","return_type":"Bool","visibility":"Public","body":"@pointer.value.isbest == 1"}},{"html_id":"lc_attr:UInt16-instance-method","name":"lc_attr","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabNodeT` structure.\n\nSee `Wakame::Lib::MeCabNodeT#lc_attr` for details.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":38,"url":null},"def":{"name":"lc_attr","return_type":"UInt16","visibility":"Public","body":"@pointer.value.lc_attr"}},{"html_id":"length:UInt16-instance-method","name":"length","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabNodeT` structure.\n\nSee `Wakame::Lib::MeCabNodeT#length` for details.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":38,"url":null},"def":{"name":"length","return_type":"UInt16","visibility":"Public","body":"@pointer.value.length"}},{"html_id":"lpath:MeCabPath?-instance-method","name":"lpath","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabPathT` structure,\nresolves the pointer returned, and returns the wrapped variant of it.\n\nSee `Wakame::Lib::MeCabPathT#lpath` for details on the underlying value.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabPathT.html\">Wakame::Lib::MeCabPathT</a></code> structure, resolves the pointer returned, and returns the wrapped variant of it.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":34,"url":null},"def":{"name":"lpath","return_type":"MeCabPath | ::Nil","visibility":"Public","body":"pointer = @pointer.value.lpath\nif pointer\n  MeCabPath.new(pointer)\nend\n"}},{"html_id":"next:MeCabNode?-instance-method","name":"next","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabNodeT` structure,\nresolves the pointer returned, and returns the wrapped variant of it.\n\nSee `Wakame::Lib::MeCabNodeT#next` for details on the underlying value.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure, resolves the pointer returned, and returns the wrapped variant of it.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":30,"url":null},"def":{"name":"next","return_type":"MeCabNode | ::Nil","visibility":"Public","body":"pointer = @pointer.value.next\nif pointer\n  MeCabNode.new(pointer, @tagger)\nend\n"}},{"html_id":"normal_node?:Bool-instance-method","name":"normal_node?","doc":"Calls `NodeStatus#normal_node?` of the `#stat`.","summary":"<p>Calls <code><a href=\"../Wakame/MeCabNode/NodeStatus.html#normal_node%3F-instance-method\">NodeStatus#normal_node?</a></code> of the <code><a href=\"../Wakame/MeCabNode.html#stat%3AWakame%3A%3AMeCabNode%3A%3ANodeStatus-instance-method\">#stat</a></code>.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":43,"url":null},"def":{"name":"normal_node?","return_type":"Bool","visibility":"Public","body":"stat.normal_node?"}},{"html_id":"pointer:Pointer(Wakame::Lib::MeCabNodeT)-instance-method","name":"pointer","doc":"Pointer to the underlying structure.","summary":"<p>Pointer to the underlying structure.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":19,"url":null},"def":{"name":"pointer","visibility":"Public","body":"@pointer"}},{"html_id":"posid:UInt16-instance-method","name":"posid","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabNodeT` structure.\n\nSee `Wakame::Lib::MeCabNodeT#posid` for details.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":38,"url":null},"def":{"name":"posid","return_type":"UInt16","visibility":"Public","body":"@pointer.value.posid"}},{"html_id":"prev:MeCabNode?-instance-method","name":"prev","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabNodeT` structure,\nresolves the pointer returned, and returns the wrapped variant of it.\n\nSee `Wakame::Lib::MeCabNodeT#prev` for details on the underlying value.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure, resolves the pointer returned, and returns the wrapped variant of it.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":30,"url":null},"def":{"name":"prev","return_type":"MeCabNode | ::Nil","visibility":"Public","body":"pointer = @pointer.value.prev\nif pointer\n  MeCabNode.new(pointer, @tagger)\nend\n"}},{"html_id":"prob:Float32-instance-method","name":"prob","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabNodeT` structure.\n\nSee `Wakame::Lib::MeCabNodeT#prob` for details.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":38,"url":null},"def":{"name":"prob","return_type":"Float32","visibility":"Public","body":"@pointer.value.prob"}},{"html_id":"rc_attr:UInt16-instance-method","name":"rc_attr","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabNodeT` structure.\n\nSee `Wakame::Lib::MeCabNodeT#rc_attr` for details.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":38,"url":null},"def":{"name":"rc_attr","return_type":"UInt16","visibility":"Public","body":"@pointer.value.rc_attr"}},{"html_id":"rlength:UInt16-instance-method","name":"rlength","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabNodeT` structure.\n\nSee `Wakame::Lib::MeCabNodeT#rlength` for details.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":38,"url":null},"def":{"name":"rlength","return_type":"UInt16","visibility":"Public","body":"@pointer.value.rlength"}},{"html_id":"rpath:MeCabPath?-instance-method","name":"rpath","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabPathT` structure,\nresolves the pointer returned, and returns the wrapped variant of it.\n\nSee `Wakame::Lib::MeCabPathT#rpath` for details on the underlying value.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabPathT.html\">Wakame::Lib::MeCabPathT</a></code> structure, resolves the pointer returned, and returns the wrapped variant of it.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":34,"url":null},"def":{"name":"rpath","return_type":"MeCabPath | ::Nil","visibility":"Public","body":"pointer = @pointer.value.rpath\nif pointer\n  MeCabPath.new(pointer)\nend\n"}},{"html_id":"stat:Wakame::MeCabNode::NodeStatus-instance-method","name":"stat","doc":"Status of this model.","summary":"<p>Status of this model.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":25,"url":null},"def":{"name":"stat","visibility":"Public","body":"@stat"}},{"html_id":"surface:String-instance-method","name":"surface","doc":"Surface string","summary":"<p>Surface string</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":21,"url":null},"def":{"name":"surface","visibility":"Public","body":"@surface"}},{"html_id":"unknown_node?:Bool-instance-method","name":"unknown_node?","doc":"Calls `NodeStatus#unknown_node?` of the `#stat`.","summary":"<p>Calls <code><a href=\"../Wakame/MeCabNode/NodeStatus.html#unknown_node%3F-instance-method\">NodeStatus#unknown_node?</a></code> of the <code><a href=\"../Wakame/MeCabNode.html#stat%3AWakame%3A%3AMeCabNode%3A%3ANodeStatus-instance-method\">#stat</a></code>.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":43,"url":null},"def":{"name":"unknown_node?","return_type":"Bool","visibility":"Public","body":"stat.unknown_node?"}},{"html_id":"wcost:Int16-instance-method","name":"wcost","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabNodeT` structure.\n\nSee `Wakame::Lib::MeCabNodeT#wcost` for details.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure.</p>","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":38,"url":null},"def":{"name":"wcost","return_type":"Int16","visibility":"Public","body":"@pointer.value.wcost"}}],"types":[{"html_id":"wakame/Wakame/MeCabNode/NodeStatus","path":"Wakame/MeCabNode/NodeStatus.html","kind":"enum","full_name":"Wakame::MeCabNode::NodeStatus","name":"NodeStatus","abstract":false,"ancestors":[{"html_id":"wakame/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"wakame/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"wakame/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"wakame/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wakame/node.cr","line_number":10,"url":null}],"repository_name":"wakame","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"NormalNode","name":"NormalNode","value":"0"},{"id":"UnknownNode","name":"UnknownNode","value":"1"},{"id":"BosNode","name":"BosNode","value":"2"},{"id":"EosNode","name":"EosNode","value":"3"},{"id":"EonNode","name":"EonNode","value":"4"}],"namespace":{"html_id":"wakame/Wakame/MeCabNode","kind":"struct","full_name":"Wakame::MeCabNode","name":"MeCabNode"},"instance_methods":[{"html_id":"bos_node?-instance-method","name":"bos_node?","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":13,"url":null},"def":{"name":"bos_node?","visibility":"Public","body":"self == BosNode"}},{"html_id":"eon_node?-instance-method","name":"eon_node?","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":15,"url":null},"def":{"name":"eon_node?","visibility":"Public","body":"self == EonNode"}},{"html_id":"eos_node?-instance-method","name":"eos_node?","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":14,"url":null},"def":{"name":"eos_node?","visibility":"Public","body":"self == EosNode"}},{"html_id":"normal_node?-instance-method","name":"normal_node?","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":11,"url":null},"def":{"name":"normal_node?","visibility":"Public","body":"self == NormalNode"}},{"html_id":"unknown_node?-instance-method","name":"unknown_node?","abstract":false,"location":{"filename":"src/wakame/node.cr","line_number":12,"url":null},"def":{"name":"unknown_node?","visibility":"Public","body":"self == UnknownNode"}}]}]},{"html_id":"wakame/Wakame/MeCabPath","path":"Wakame/MeCabPath.html","kind":"struct","full_name":"Wakame::MeCabPath","name":"MeCabPath","abstract":false,"superclass":{"html_id":"wakame/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"wakame/Wakame/WrappingStruct","kind":"module","full_name":"Wakame::WrappingStruct","name":"WrappingStruct"},{"html_id":"wakame/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"wakame/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"wakame/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wakame/path.cr","line_number":6,"url":null}],"repository_name":"wakame","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"wakame/Wakame/WrappingStruct","kind":"module","full_name":"Wakame::WrappingStruct","name":"WrappingStruct"}],"namespace":{"html_id":"wakame/Wakame","kind":"module","full_name":"Wakame","name":"Wakame"},"doc":"Wrapper for the `Wakame::Lib::MeCabNodeT` structure.","summary":"<p>Wrapper for the <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure.</p>","constructors":[{"html_id":"new(pointer:Pointer(Lib::MeCabPathT))-class-method","name":"new","abstract":false,"args":[{"name":"pointer","external_name":"pointer","restriction":"::Pointer(Lib::MeCabPathT)"}],"args_string":"(pointer : Pointer(Lib::MeCabPathT))","args_html":"(pointer : Pointer(<a href=\"../Wakame/Lib/MeCabPathT.html\">Lib::MeCabPathT</a>))","location":{"filename":"src/wakame/path.cr","line_number":24,"url":null},"def":{"name":"new","args":[{"name":"pointer","external_name":"pointer","restriction":"::Pointer(Lib::MeCabPathT)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(pointer)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"cost:Int32-instance-method","name":"cost","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabPathT` structure.\n\nSee `Wakame::Lib::MeCabPathT#cost` for details.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabPathT.html\">Wakame::Lib::MeCabPathT</a></code> structure.</p>","abstract":false,"location":{"filename":"src/wakame/path.cr","line_number":19,"url":null},"def":{"name":"cost","return_type":"Int32","visibility":"Public","body":"@pointer.value.cost"}},{"html_id":"lnext:MeCabPath?-instance-method","name":"lnext","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabPathT` structure,\nresolves the pointer returned, and returns the wrapped variant of it.\n\nSee `Wakame::Lib::MeCabPathT#lnext` for details on the underlying value.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabPathT.html\">Wakame::Lib::MeCabPathT</a></code> structure, resolves the pointer returned, and returns the wrapped variant of it.</p>","abstract":false,"location":{"filename":"src/wakame/path.cr","line_number":15,"url":null},"def":{"name":"lnext","return_type":"MeCabPath | ::Nil","visibility":"Public","body":"pointer = @pointer.value.lnext\nif pointer\n  MeCabPath.new(pointer)\nend\n"}},{"html_id":"lnode:MeCabNode?-instance-method","name":"lnode","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabNodeT` structure,\nresolves the pointer returned, and returns the wrapped variant of it.\n\nSee `Wakame::Lib::MeCabNodeT#lnode` for details on the underlying value.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure, resolves the pointer returned, and returns the wrapped variant of it.</p>","abstract":false,"location":{"filename":"src/wakame/path.cr","line_number":11,"url":null},"def":{"name":"lnode","return_type":"MeCabNode | ::Nil","visibility":"Public","body":"pointer = @pointer.value.lnode\nif pointer\n  MeCabNode.new(pointer, @tagger)\nend\n"}},{"html_id":"pointer:Pointer(Wakame::Lib::MeCabPathT)-instance-method","name":"pointer","doc":"Pointer to the underlying structure.","summary":"<p>Pointer to the underlying structure.</p>","abstract":false,"location":{"filename":"src/wakame/path.cr","line_number":10,"url":null},"def":{"name":"pointer","visibility":"Public","body":"@pointer"}},{"html_id":"prob:Float32-instance-method","name":"prob","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabPathT` structure.\n\nSee `Wakame::Lib::MeCabPathT#prob` for details.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabPathT.html\">Wakame::Lib::MeCabPathT</a></code> structure.</p>","abstract":false,"location":{"filename":"src/wakame/path.cr","line_number":19,"url":null},"def":{"name":"prob","return_type":"Float32","visibility":"Public","body":"@pointer.value.prob"}},{"html_id":"rnext:MeCabPath?-instance-method","name":"rnext","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabPathT` structure,\nresolves the pointer returned, and returns the wrapped variant of it.\n\nSee `Wakame::Lib::MeCabPathT#rnext` for details on the underlying value.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabPathT.html\">Wakame::Lib::MeCabPathT</a></code> structure, resolves the pointer returned, and returns the wrapped variant of it.</p>","abstract":false,"location":{"filename":"src/wakame/path.cr","line_number":15,"url":null},"def":{"name":"rnext","return_type":"MeCabPath | ::Nil","visibility":"Public","body":"pointer = @pointer.value.rnext\nif pointer\n  MeCabPath.new(pointer)\nend\n"}},{"html_id":"rnode:MeCabNode?-instance-method","name":"rnode","doc":"This method forwards the call to the underlying `Wakame::Lib::MeCabNodeT` structure,\nresolves the pointer returned, and returns the wrapped variant of it.\n\nSee `Wakame::Lib::MeCabNodeT#rnode` for details on the underlying value.","summary":"<p>This method forwards the call to the underlying <code><a href=\"../Wakame/Lib/MeCabNodeT.html\">Wakame::Lib::MeCabNodeT</a></code> structure, resolves the pointer returned, and returns the wrapped variant of it.</p>","abstract":false,"location":{"filename":"src/wakame/path.cr","line_number":11,"url":null},"def":{"name":"rnode","return_type":"MeCabNode | ::Nil","visibility":"Public","body":"pointer = @pointer.value.rnode\nif pointer\n  MeCabNode.new(pointer, @tagger)\nend\n"}}]},{"html_id":"wakame/Wakame/Options","path":"Wakame/Options.html","kind":"struct","full_name":"Wakame::Options","name":"Options","abstract":false,"superclass":{"html_id":"wakame/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"wakame/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"wakame/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"wakame/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wakame/options.cr","line_number":4,"url":null}],"repository_name":"wakame","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wakame/Wakame","kind":"module","full_name":"Wakame","name":"Wakame"},"constructors":[{"html_id":"new(option_str:String)-class-method","name":"new","doc":"Creates a new options object with the given command-line style option arguments.","summary":"<p>Creates a new options object with the given command-line style option arguments.</p>","abstract":false,"args":[{"name":"option_str","external_name":"option_str","restriction":"String"}],"args_string":"(option_str : String)","args_html":"(option_str : String)","location":{"filename":"src/wakame/options.cr","line_number":37,"url":null},"def":{"name":"new","args":[{"name":"option_str","external_name":"option_str","restriction":"String"}],"visibility":"Public","body":"options = self.new\nparser = OptionParser.new(gnu_optional_args: true)\nparser.on(\"-r FILE\", \"--rcfile FILE\", \"\") do |file|\n  options.rcfile = file\nend\nparser.on(\"-d DIR\", \"--dicdir DIR\", \"\") do |dir|\n  options.dicdir = dir\nend\nparser.on(\"-u FILE\", \"--userdic FILE\", \"\") do |file|\n  options.userdic = file\nend\nparser.on(\"-l INT\", \"--lattice-level INT\", \"\") do |int|\n  options.lattice_level = int.to_i\nend\nparser.on(\"-O TYPE\", \"--output-format-type TYPE\", \"\") do |type|\n  options.output_format_type = type\nend\nparser.on(\"-a\", \"--all-morphs\", \"\") do\n  options.all_morphs = true\nend\nparser.on(\"-N INT\", \"--nbest INT\", \"\") do |int|\n  nbest = int.to_i\n  if nbest < 1 || nbest > 512\n    raise(WakameError.new(\"Invalid N value\"))\n  end\n  options.nbest = nbest\nend\nparser.on(\"-p\", \"--partial\", \"\") do\n  options.partial = true\nend\nparser.on(\"-m\", \"--marginal\", \"\") do\n  options.marginal = true\nend\nparser.on(\"-M INT\", \"--max-grouping-size INT\", \"\") do |int|\n  options.max_grouping_size = int.to_i\nend\nparser.on(\"-F STR\", \"--node-format STR\", \"\") do |str|\n  options.node_format = str\nend\nparser.on(\"-U STR\", \"--unk-format STR\", \"\") do |str|\n  options.unk_format = str\nend\nparser.on(\"-B STR\", \"--bos-format STR\", \"\") do |str|\n  options.bos_format = str\nend\nparser.on(\"-E STR\", \"--eos-format STR\", \"\") do |str|\n  options.eos_format = str\nend\nparser.on(\"-S STR\", \"--eon-format STR\", \"\") do |str|\n  options.eon_format = str\nend\nparser.on(\"-x STR\", \"--unk-feature STR\", \"\") do |str|\n  options.unk_feature = str\nend\nparser.on(\"-b INT\", \"--input-buffer-size INT\", \"\") do |int|\n  options.input_buffer_size = int.to_i\nend\nparser.on(\"-C\", \"--allocate-sentence\", \"\") do\n  options.allocate_sentence = true\nend\nparser.on(\"-t FLOAT\", \"--theta FLOAT\", \"\") do |float|\n  options.theta = float.to_f32\nend\nparser.on(\"-c INT\", \"--cost-factor INT\", \"\") do |int|\n  options.cost_factor = int.to_i\nend\nparser.parse(option_str.split)\noptions\n"}},{"html_id":"new(rcfile:String?=nil,dicdir:String?=nil,userdic:String?=nil,lattice_level:Int32?=nil,output_format_type:String?=nil,all_morphs:Bool?=nil,nbest:Int32?=nil,partial:Bool?=nil,marginal:Bool?=nil,max_grouping_size:Int32?=nil,node_format:String?=nil,unk_format:String?=nil,bos_format:String?=nil,eos_format:String?=nil,eon_format:String?=nil,unk_feature:String?=nil,input_buffer_size:Int32?=nil,allocate_sentence:Bool?=nil,theta:Float32?=nil,cost_factor:Int32?=nil)-class-method","name":"new","doc":"Creates a new object that represents a collection of the given option arguments\nto pass to the Wakame::MeCab object.","summary":"<p>Creates a new object that represents a collection of the given option arguments to pass to the Wakame::MeCab object.</p>","abstract":false,"args":[{"name":"rcfile","default_value":"nil","external_name":"rcfile","restriction":"::Nil | ::String"},{"name":"dicdir","default_value":"nil","external_name":"dicdir","restriction":"::Nil | ::String"},{"name":"userdic","default_value":"nil","external_name":"userdic","restriction":"::Nil | ::String"},{"name":"lattice_level","default_value":"nil","external_name":"lattice_level","restriction":"::Int32 | ::Nil"},{"name":"output_format_type","default_value":"nil","external_name":"output_format_type","restriction":"::Nil | ::String"},{"name":"all_morphs","default_value":"nil","external_name":"all_morphs","restriction":"::Bool | ::Nil"},{"name":"nbest","default_value":"nil","external_name":"nbest","restriction":"::Int32 | ::Nil"},{"name":"partial","default_value":"nil","external_name":"partial","restriction":"::Bool | ::Nil"},{"name":"marginal","default_value":"nil","external_name":"marginal","restriction":"::Bool | ::Nil"},{"name":"max_grouping_size","default_value":"nil","external_name":"max_grouping_size","restriction":"::Int32 | ::Nil"},{"name":"node_format","default_value":"nil","external_name":"node_format","restriction":"::Nil | ::String"},{"name":"unk_format","default_value":"nil","external_name":"unk_format","restriction":"::Nil | ::String"},{"name":"bos_format","default_value":"nil","external_name":"bos_format","restriction":"::Nil | ::String"},{"name":"eos_format","default_value":"nil","external_name":"eos_format","restriction":"::Nil | ::String"},{"name":"eon_format","default_value":"nil","external_name":"eon_format","restriction":"::Nil | ::String"},{"name":"unk_feature","default_value":"nil","external_name":"unk_feature","restriction":"::Nil | ::String"},{"name":"input_buffer_size","default_value":"nil","external_name":"input_buffer_size","restriction":"::Int32 | ::Nil"},{"name":"allocate_sentence","default_value":"nil","external_name":"allocate_sentence","restriction":"::Bool | ::Nil"},{"name":"theta","default_value":"nil","external_name":"theta","restriction":"::Float32 | ::Nil"},{"name":"cost_factor","default_value":"nil","external_name":"cost_factor","restriction":"::Int32 | ::Nil"}],"args_string":"(rcfile : String? = nil, dicdir : String? = nil, userdic : String? = nil, lattice_level : Int32? = nil, output_format_type : String? = nil, all_morphs : Bool? = nil, nbest : Int32? = nil, partial : Bool? = nil, marginal : Bool? = nil, max_grouping_size : Int32? = nil, node_format : String? = nil, unk_format : String? = nil, bos_format : String? = nil, eos_format : String? = nil, eon_format : String? = nil, unk_feature : String? = nil, input_buffer_size : Int32? = nil, allocate_sentence : Bool? = nil, theta : Float32? = nil, cost_factor : Int32? = nil)","args_html":"(rcfile : String? = <span class=\"n\">nil</span>, dicdir : String? = <span class=\"n\">nil</span>, userdic : String? = <span class=\"n\">nil</span>, lattice_level : Int32? = <span class=\"n\">nil</span>, output_format_type : String? = <span class=\"n\">nil</span>, all_morphs : Bool? = <span class=\"n\">nil</span>, nbest : Int32? = <span class=\"n\">nil</span>, partial : Bool? = <span class=\"n\">nil</span>, marginal : Bool? = <span class=\"n\">nil</span>, max_grouping_size : Int32? = <span class=\"n\">nil</span>, node_format : String? = <span class=\"n\">nil</span>, unk_format : String? = <span class=\"n\">nil</span>, bos_format : String? = <span class=\"n\">nil</span>, eos_format : String? = <span class=\"n\">nil</span>, eon_format : String? = <span class=\"n\">nil</span>, unk_feature : String? = <span class=\"n\">nil</span>, input_buffer_size : Int32? = <span class=\"n\">nil</span>, allocate_sentence : Bool? = <span class=\"n\">nil</span>, theta : Float32? = <span class=\"n\">nil</span>, cost_factor : Int32? = <span class=\"n\">nil</span>)","location":{"filename":"src/wakame/options.cr","line_number":73,"url":null},"def":{"name":"new","args":[{"name":"rcfile","default_value":"nil","external_name":"rcfile","restriction":"::Nil | ::String"},{"name":"dicdir","default_value":"nil","external_name":"dicdir","restriction":"::Nil | ::String"},{"name":"userdic","default_value":"nil","external_name":"userdic","restriction":"::Nil | ::String"},{"name":"lattice_level","default_value":"nil","external_name":"lattice_level","restriction":"::Int32 | ::Nil"},{"name":"output_format_type","default_value":"nil","external_name":"output_format_type","restriction":"::Nil | ::String"},{"name":"all_morphs","default_value":"nil","external_name":"all_morphs","restriction":"::Bool | ::Nil"},{"name":"nbest","default_value":"nil","external_name":"nbest","restriction":"::Int32 | ::Nil"},{"name":"partial","default_value":"nil","external_name":"partial","restriction":"::Bool | ::Nil"},{"name":"marginal","default_value":"nil","external_name":"marginal","restriction":"::Bool | ::Nil"},{"name":"max_grouping_size","default_value":"nil","external_name":"max_grouping_size","restriction":"::Int32 | ::Nil"},{"name":"node_format","default_value":"nil","external_name":"node_format","restriction":"::Nil | ::String"},{"name":"unk_format","default_value":"nil","external_name":"unk_format","restriction":"::Nil | ::String"},{"name":"bos_format","default_value":"nil","external_name":"bos_format","restriction":"::Nil | ::String"},{"name":"eos_format","default_value":"nil","external_name":"eos_format","restriction":"::Nil | ::String"},{"name":"eon_format","default_value":"nil","external_name":"eon_format","restriction":"::Nil | ::String"},{"name":"unk_feature","default_value":"nil","external_name":"unk_feature","restriction":"::Nil | ::String"},{"name":"input_buffer_size","default_value":"nil","external_name":"input_buffer_size","restriction":"::Int32 | ::Nil"},{"name":"allocate_sentence","default_value":"nil","external_name":"allocate_sentence","restriction":"::Bool | ::Nil"},{"name":"theta","default_value":"nil","external_name":"theta","restriction":"::Float32 | ::Nil"},{"name":"cost_factor","default_value":"nil","external_name":"cost_factor","restriction":"::Int32 | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(rcfile, dicdir, userdic, lattice_level, output_format_type, all_morphs, nbest, partial, marginal, max_grouping_size, node_format, unk_format, bos_format, eos_format, eon_format, unk_feature, input_buffer_size, allocate_sentence, theta, cost_factor)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"all_morphs:Bool?-instance-method","name":"all_morphs","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":10,"url":null},"def":{"name":"all_morphs","return_type":"Bool | ::Nil","visibility":"Public","body":"@all_morphs"}},{"html_id":"allocate_sentence:Bool?-instance-method","name":"allocate_sentence","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":22,"url":null},"def":{"name":"allocate_sentence","return_type":"Bool | ::Nil","visibility":"Public","body":"@allocate_sentence"}},{"html_id":"bos_format:String?-instance-method","name":"bos_format","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":17,"url":null},"def":{"name":"bos_format","return_type":"String | ::Nil","visibility":"Public","body":"@bos_format"}},{"html_id":"cost_factor:Int32?-instance-method","name":"cost_factor","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":24,"url":null},"def":{"name":"cost_factor","return_type":"Int32 | ::Nil","visibility":"Public","body":"@cost_factor"}},{"html_id":"dicdir:String?-instance-method","name":"dicdir","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":6,"url":null},"def":{"name":"dicdir","return_type":"String | ::Nil","visibility":"Public","body":"@dicdir"}},{"html_id":"eon_format:String?-instance-method","name":"eon_format","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":19,"url":null},"def":{"name":"eon_format","return_type":"String | ::Nil","visibility":"Public","body":"@eon_format"}},{"html_id":"eos_format:String?-instance-method","name":"eos_format","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":18,"url":null},"def":{"name":"eos_format","return_type":"String | ::Nil","visibility":"Public","body":"@eos_format"}},{"html_id":"input_buffer_size:Int32?-instance-method","name":"input_buffer_size","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":21,"url":null},"def":{"name":"input_buffer_size","return_type":"Int32 | ::Nil","visibility":"Public","body":"@input_buffer_size"}},{"html_id":"lattice_level:Int32?-instance-method","name":"lattice_level","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":8,"url":null},"def":{"name":"lattice_level","return_type":"Int32 | ::Nil","visibility":"Public","body":"@lattice_level"}},{"html_id":"marginal:Bool?-instance-method","name":"marginal","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":13,"url":null},"def":{"name":"marginal","return_type":"Bool | ::Nil","visibility":"Public","body":"@marginal"}},{"html_id":"max_grouping_size:Int32?-instance-method","name":"max_grouping_size","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":14,"url":null},"def":{"name":"max_grouping_size","return_type":"Int32 | ::Nil","visibility":"Public","body":"@max_grouping_size"}},{"html_id":"nbest:Int32?-instance-method","name":"nbest","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":11,"url":null},"def":{"name":"nbest","return_type":"Int32 | ::Nil","visibility":"Public","body":"@nbest"}},{"html_id":"node_format:String?-instance-method","name":"node_format","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":15,"url":null},"def":{"name":"node_format","return_type":"String | ::Nil","visibility":"Public","body":"@node_format"}},{"html_id":"output_format_type:String?-instance-method","name":"output_format_type","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":9,"url":null},"def":{"name":"output_format_type","return_type":"String | ::Nil","visibility":"Public","body":"@output_format_type"}},{"html_id":"partial:Bool?-instance-method","name":"partial","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":12,"url":null},"def":{"name":"partial","return_type":"Bool | ::Nil","visibility":"Public","body":"@partial"}},{"html_id":"rcfile:String?-instance-method","name":"rcfile","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":5,"url":null},"def":{"name":"rcfile","return_type":"String | ::Nil","visibility":"Public","body":"@rcfile"}},{"html_id":"theta:Float32?-instance-method","name":"theta","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":23,"url":null},"def":{"name":"theta","return_type":"Float32 | ::Nil","visibility":"Public","body":"@theta"}},{"html_id":"unk_feature:String?-instance-method","name":"unk_feature","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":20,"url":null},"def":{"name":"unk_feature","return_type":"String | ::Nil","visibility":"Public","body":"@unk_feature"}},{"html_id":"unk_format:String?-instance-method","name":"unk_format","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":16,"url":null},"def":{"name":"unk_format","return_type":"String | ::Nil","visibility":"Public","body":"@unk_format"}},{"html_id":"userdic:String?-instance-method","name":"userdic","abstract":false,"location":{"filename":"src/wakame/options.cr","line_number":7,"url":null},"def":{"name":"userdic","return_type":"String | ::Nil","visibility":"Public","body":"@userdic"}}]},{"html_id":"wakame/Wakame/WakameError","path":"Wakame/WakameError.html","kind":"class","full_name":"Wakame::WakameError","name":"WakameError","abstract":false,"superclass":{"html_id":"wakame/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"wakame/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"wakame/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wakame/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wakame/wakame.cr","line_number":325,"url":null}],"repository_name":"wakame","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wakame/Wakame","kind":"module","full_name":"Wakame","name":"Wakame"},"doc":"Generic error type for the `Wakame` module.","summary":"<p>Generic error type for the <code><a href=\"../Wakame.html\">Wakame</a></code> module.</p>"},{"html_id":"wakame/Wakame/WrappingStruct","path":"Wakame/WrappingStruct.html","kind":"module","full_name":"Wakame::WrappingStruct","name":"WrappingStruct","abstract":false,"locations":[{"filename":"src/wakame/wrapping_struct.cr","line_number":3,"url":null}],"repository_name":"wakame","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"wakame/Wakame/DictionaryInfo","kind":"struct","full_name":"Wakame::DictionaryInfo","name":"DictionaryInfo"},{"html_id":"wakame/Wakame/MeCabNode","kind":"struct","full_name":"Wakame::MeCabNode","name":"MeCabNode"},{"html_id":"wakame/Wakame/MeCabPath","kind":"struct","full_name":"Wakame::MeCabPath","name":"MeCabPath"}],"namespace":{"html_id":"wakame/Wakame","kind":"module","full_name":"Wakame","name":"Wakame"},"doc":"Internal module which is shared across the wrapper structs.","summary":"<p>Internal module which is shared across the wrapper structs.</p>"}]}]}})